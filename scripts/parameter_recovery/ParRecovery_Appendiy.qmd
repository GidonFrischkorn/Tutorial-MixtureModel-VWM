---
title: "ML vs. BMM parameter recovery of the two-parameter mixture model"
author: "Gidon T. Frischkorn & Ven Popov"
format: html
---

```{r SetUp}
pacman::p_load(here, tidytable, mixtur, brms, bmm, ggplot2, ggdist)
HOME <- here()
```


## Design of the parameter recovery simulation

We generated parameters for 40 subjects with three different number of observations per subject: 50, 100, and 200. Using these subject parameters we generated data using the random generation function for the two-parameter mixture model implemented in bmm (`rmixture2p()`). Then we estimated parameters for the two-parameter mixture model using subject-wise maximum likelihood estimation implemented in the `mixtur` r package, and using hierarchical Bayesian estimation implemented in the `bmm` package. We repeated this procedure 250 times to approximate the variability in parameter estimation due to random noise in the data generating process. Critically, we kept subject parameters constant across these repetitions and thus any variability in parameter recovery in solely due to variability in the data generating process.

```{r Simulations}
n_trial_conditions <- c(50,100,200)
for(n_trials in n_trial_conditions) {
  results_file_name <- glue("par_rec_fits{n_trials}.rds")
  
  if (!file.exists(here("output",results_file_name))) {
    simulation_file_name <- glue("mixture2p_{n_trials}obs.R")
    source(simulation_file_name)
    rm(simulation_file_name)
  }
}
rm(n_trials, results_file_name)
```

## Results of the parameter recovery simulation

```{r LoadResults}
source(here("scripts","parameter_recovery","collect_parRecovery_results.R"))
```

As dependent variables of the parameter recovery, we calculated the correlation and root mean square error (RMSE) between the data generating subject parameters and the estimated parameters from the ML and BMM approach for each repetition.

```{r}
recovery_subPar <- df_subPar %>% 
  summarise(
    cor_ml = cor(gen, est_ml),
    cor_bmm = cor(gen, est_bmm),
    rmse_ml = sqrt(mean((gen - est_ml)^2)),
    rmse_bmm = sqrt(mean((gen - est_bmm)^2)),
    .by = c("nRep","n_trials", "parameter")
  ) %>% 
  pivot_longer(cols = c(cor_ml, cor_bmm, rmse_ml, rmse_bmm)) %>% 
  mutate(indicator = stringr::str_split_i(name,"_",1),
         method = stringr::str_split_i(name,"_",2)) %>% 
  select(-name)
```

```{r}
ggplot(
  data = recovery_subPar %>% filter(indicator == "rmse"),
  aes(x = value, y = as.factor(n_trials), color = method)
) + facet_grid(. ~ parameter, scales = "free") +
  geom_boxplot()
```

